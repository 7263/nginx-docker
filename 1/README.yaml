# Used with http://github.com/GoogleCloudPlatform/runtimes-common/tree/master/docgen
_templates:
- &Image launcher.gcr.io/google/nginx1
- &PullCommand gcloud docker -- pull launcher.gcr.io/google/nginx1
- &ServiceArgs
  name: nginx
  image: *Image
- &BaseServerRun
  <<: *ServiceArgs
  exposedPorts:
  - port: 80
  - port: 443
- &BaseClientRun
  name: nginx
  image: *Image
  runType: INTERACTIVE_SHELL
- &BaseExec
  execType: INTERACTIVE_SHELL

overview:
  description: |-
    This image contains an installation Nginx 1.x.

    For more information, see the
    [Official Image Launcher Page](https://console.cloud.google.com/launcher/details/google/nginx1).
  dockerfileUrl: https://github.com/GoogleCloudPlatform/nginx-docker/tree/master/1/1.12
  pullCommand: *PullCommand

taskGroups:
- title: Running Nginx
  tasks:
  - title: Start a Nginx web server
    runtimes: [DOCKER, KUBERNETES]
    instructions:
    - run:
        <<: *BaseServerRun
  - title: Use a persistent data volume
    description: |-
      Web servers process and generate content. Using a persistent volume provides a way for the web server to retain the web content in the event of a container reboot or crash.
    runtimes: [DOCKER, KUBERNETES]
    instructions:
    - run:
        <<: *BaseServerRun
        volumes:
        - name: webcontent
          path: /usr/share/nginx/html/
          emptyPersistentVolume:
            hostPath: /path/to/your/nginx/web/content/index.html
- title: Web server configuration
  anchorId: configuration
  tasks:
  - title: Using configuration volume
    runtimes: [DOCKER, KUBERNETES]
    description: |-
      Nginx can be configured through the `nginx.conf` file. We also need to setup virtual hosts.

      Assume /path/to/your/ is the local directory on your machine, we have to create the file `site.conf` to setup the virtual host.

      To view the current nginx config run the following.

    instructions:
    - exec:
        <<: *BaseExec
        command: cat /etc/nginx/nginx.conf
        containerName: some-nginx
    - description: |-
        Save the following content with the filename `site.conf` to your local machine.

        ```
          server {
             root /usr/share/nginx/html;
             index index.html index.htm;
             server_name localhost;
             
             location / {
               try_files $uri $uri/ /index.html;
             } 
          }
        ```
    - run:
        <<: *BaseServerRun
        volumes:
        - name: virtualhost
          path: /etc/nginx/conf.d/
          singleFile:
            hostFile:  /path/to/your/nginx.conf

- title: Using Nginx
  description: |-
    Now that Nginx is deployed you can connect to the container and test the web server.

    Assume /path/to/your/ is the local directory to the content  on your machine, we will save the file `index.html` there also.
  tasks:
  - title: Moving the web content to Nginx
    description: The web server needs content to serve. We can move the web content to the new persistent volume we created with the command below. We also run the chmod command to allow nginx to read `index.html`.
    runtimes: [DOCKER, KUBERNETES]
    instructions:
    - copy:
        direction: TO_CONTAINER
        path: /usr/share/nginx/html/index.html
        hostPath:  /path/to/your/index.html
        containerFromRun: *BaseServerRun
    - exec:
        <<: *BaseExec
        containerName: some-nginx
        command: chmod 744 /usr/share/nginx/html/index.html
  - title: Testing the web server
    description: Attach to the webserver.
    runtimes: [DOCKER, KUBERNETES]
    instructions:
    - exec:
        <<: *BaseExec
        containerName: some-nginx
        command: bash
        subcommands:
        - description: We need `curl` to test the webserver so we need to install it.
          command: apt-get update && apt-get install -y curl
        - description: We can now use `curl` to see if the webserver returns content.
          command: curl http://localhost

portReference:
  ports:
  - port: '80'
    description: Nginx http default port
  - port: '443'
    description: Nginx https secure connection over SSL

volumeReference:
  volumes:
  - path: /usr/share/nginx/html
    description: Volume location where web server will parse and serve static and dynamic content.
  - path: /etc/nginx/nginx.conf
    description: Volume location where web server is configured.
